{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "62d8085b-f2ab-4ca4-9783-47f12cad10a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import mysql.connector as connector"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a6ca8469-efd1-4a7f-af59-553544d9238d",
   "metadata": {},
   "outputs": [],
   "source": [
    "connection = connector.connect(user = \"root\", password = \"GirlBoss1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7b831149-ca10-4469-87ba-42c42c2229de",
   "metadata": {},
   "outputs": [],
   "source": [
    "connection = connector.connect(user = \"root\", password = \"GirlBoss1\", db = \"little_lemon_db\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8f121589-7efd-4f2b-8072-5e65f3fdf091",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cursor is created to communicate with the MySQL using Python.\n"
     ]
    }
   ],
   "source": [
    "cursor = connection.cursor()\n",
    "print(\"Cursor is created to communicate with the MySQL using Python.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d154aa06-e72a-43ca-90e1-3cc8ef2923b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The database little_lemon_db is set for use.\n"
     ]
    }
   ],
   "source": [
    "cursor.execute(\"USE little_lemon_db\")\n",
    "connection.database\n",
    "print(\"The database little_lemon_db is set for use.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1e0ffbd3-c9fa-4dbe-ad0b-785869c90bf3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The database little_lemon_db is set for use.\n"
     ]
    }
   ],
   "source": [
    "cursor.execute(\"USE little_lemon_db\")\n",
    "connection.database\n",
    "print(\"The database little_lemon_db is set for use.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bec0174e-3603-470b-afbc-d1b1f052a75e",
   "metadata": {},
   "outputs": [],
   "source": [
    "show_tables_query = \"SHOW tables\" \n",
    "cursor.execute(show_tables_query)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ab5d5317-cf09-43de-b1f5-cfe0bc8f8d5d",
   "metadata": {},
   "outputs": [],
   "source": [
    "results =cursor.fetchall()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8c57d6c1-bcb9-42f0-8e4a-aab0808d2fa7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('bookings',), ('customerdetails',), ('menu',), ('order_delivery_status',), ('orders',), ('ordersview',), ('staff_information',)]\n"
     ]
    }
   ],
   "source": [
    "print(results) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9387ce2c-a408-4cad-86a6-647b4b09a9f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "join_query=\"\"\"SELECT Names, Contacts, TotalCost  \n",
    "FROM little_lemon_db.customerdetails \n",
    "JOIN orders  ON customerdetails.CustomerID = orders.CustomerID \n",
    "WHERE TotalCost > 60;\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bdefd2f8-a5bc-4ee9-bc9a-7e127e35cae5",
   "metadata": {},
   "outputs": [],
   "source": [
    "cursor.execute(join_query)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f0669c29-3de8-4e56-afaa-c952d3ce35ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "results = cursor.fetchall()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "dbf5831a-c299-48bc-8fa0-d497c9324bcd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('Charlie', 'charlie@example.com', Decimal('499.00')), ('Frank', 'frank@example.com', Decimal('295.00')), ('Bob', 'bob@example.com', Decimal('599.00')), ('Emily', 'emily@example.com', Decimal('199.00')), ('John ', 'john.@example.com', Decimal('795.00')), ('Grace', 'grace@example.com', Decimal('295.00')), ('Jane', 'jane.@example.com', Decimal('499.00')), ('David', 'david@example.com', Decimal('599.00')), ('Alice', 'alice@example.com', Decimal('199.00')), ('Hannah', 'hannah@example.com', Decimal('795.00'))]\n"
     ]
    }
   ],
   "source": [
    "print(results)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b9daa14e-7ffb-4c15-873e-7a1d681e6d45",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2168cf2e-f03a-4cca-81a0-8af9ba722959",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
